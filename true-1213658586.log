/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C2*/SET SCHEMA PUBLIC
SET DATABASE COLLATION "SQL_TEXT_UCC"
SET DATABASE SQL SYNTAX ora TRUE
SET DATABASE SQL CONCAT NULLS false
CREATE FUNCTION SLN(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.sln'
CREATE FUNCTION STRING(par0 INTEGER,par1 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.string'
CREATE FUNCTION PPMT(par0 DOUBLE,par1 INTEGER,par2 INTEGER,par3 DOUBLE,par4 DOUBLE,par5 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ppmt'
CREATE FUNCTION formulaToNumeric(par0 TIMESTAMP,par1 LONGVARCHAR) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToNumeric'
CREATE FUNCTION DATEPARTWA(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 INTEGER,par3 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.datePart'
CREATE FUNCTION EQUALS(par0 OBJECT,par1 OBJECT) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.equals'
CREATE FUNCTION ROUNDWA(par0 DOUBLE,par1 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.round'
CREATE FUNCTION formulaToText(par0 BOOLEAN,par1 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToText'
CREATE FUNCTION NZ(par0 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION FORMAT(par0 TIMESTAMP,par1 VARCHAR(255)) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.format'
CREATE FUNCTION STRREVERSE(par0 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.strReverse'
CREATE FUNCTION formulaToNumeric(par0 DOUBLE,par1 LONGVARCHAR) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToNumeric'
CREATE FUNCTION FIXWA(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.fix'
CREATE FUNCTION ISNUMERIC(par0 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isNumeric'
CREATE FUNCTION CLNG(par0 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.clng'
CREATE FUNCTION FORMAT(par0 DOUBLE,par1 VARCHAR(255)) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.format'
CREATE FUNCTION MID(par0 LONGVARCHAR,par1 INTEGER,par2 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.mid'
CREATE FUNCTION CLONG(par0 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.clong'
CREATE FUNCTION CCUR(par0 DECIMAL(8,4)) RETURNS DECIMAL(8,4)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ccur'
CREATE FUNCTION CLONG(par0 DOUBLE) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.clong'
CREATE FUNCTION formulaToText(par0 TIMESTAMP,par1 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToText'
CREATE FUNCTION CINT(par0 DOUBLE) RETURNS SMALLINT  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cint'
CREATE FUNCTION CDBL(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cdbl'
CREATE FUNCTION FV(par0 DOUBLE,par1 INTEGER,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.fv'
CREATE FUNCTION NPER(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nper'
CREATE FUNCTION formulaToText(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToText'
CREATE FUNCTION IPMT(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ipmt'
CREATE FUNCTION formulaToBoolean(par0 BOOLEAN,par1 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToBoolean'
CREATE FUNCTION STRCOMP(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.strComp'
CREATE FUNCTION PMT(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.pmt'
CREATE FUNCTION WEEKDAY(par0 TIMESTAMP) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.weekDay'
CREATE FUNCTION INSTRWA(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instr'
CREATE FUNCTION NZ(par0 DOUBLE,par1 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION CSTR(par0 TIMESTAMP) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cstr'
CREATE FUNCTION RATE(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rate'
CREATE FUNCTION formulaToDate(par0 BOOLEAN,par1 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToDate'
CREATE FUNCTION SYD(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.syd'
CREATE FUNCTION MONTHNAMEWA(par0 INTEGER) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.monthName'
CREATE FUNCTION formulaToDate(par0 DOUBLE,par1 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToDate'
CREATE FUNCTION formulaToText(par0 DOUBLE,par1 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToText'
CREATE FUNCTION CLNG(par0 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.clng'
CREATE FUNCTION INSTRWA(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instr'
CREATE FUNCTION DATEADDWA(par0 LONGVARCHAR,par1 INTEGER,par2 TIMESTAMP) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateAdd'
CREATE FUNCTION IIF(par0 BOOLEAN,par1 BOOLEAN,par2 BOOLEAN) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.iif'
CREATE FUNCTION WEEKDAYNAME(par0 INTEGER,par1 BOOLEAN) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.weekDayName'
CREATE FUNCTION RATE(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rate'
CREATE FUNCTION IPMT(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ipmt'
CREATE FUNCTION LEFTWA(par0 LONGVARCHAR,par1 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.left'
CREATE FUNCTION ISDATE(par0 TIMESTAMP) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isDate'
CREATE FUNCTION PARTITION(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.partition'
CREATE FUNCTION STRCONV(par0 LONGVARCHAR,par1 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.strConv'
CREATE FUNCTION formulaToDate(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToDate'
CREATE FUNCTION PMT(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.pmt'
CREATE FUNCTION CINT(par0 BOOLEAN) RETURNS SMALLINT  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cint'
CREATE FUNCTION RIGHTWA(par0 LONGVARCHAR,par1 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.right'
CREATE FUNCTION SPACE(par0 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.space'
CREATE FUNCTION DATE() RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.date'
CREATE FUNCTION IIF(par0 BOOLEAN,par1 TIMESTAMP,par2 TIMESTAMP) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.iif'
CREATE FUNCTION DATEDIFFWA(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 TIMESTAMP) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateDiff'
CREATE FUNCTION LEN(par0 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.len'
CREATE FUNCTION formulaToNumeric(par0 BOOLEAN,par1 LONGVARCHAR) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToNumeric'
CREATE FUNCTION PPMT(par0 DOUBLE,par1 INTEGER,par2 INTEGER,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ppmt'
CREATE FUNCTION NZ(par0 DECIMAL) RETURNS DECIMAL  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION orderJet(par0 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.orderJet'
CREATE FUNCTION STRCOMP(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.strComp'
CREATE FUNCTION ATN(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.atn'
CREATE FUNCTION WEEKDAYNAME(par0 INTEGER) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.weekDayName'
CREATE FUNCTION INSTRWA(par0 INTEGER,par1 LONGVARCHAR,par2 LONGVARCHAR,par3 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instr'
CREATE FUNCTION INSTRWA(par0 INTEGER,par1 LONGVARCHAR,par2 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instr'
CREATE FUNCTION formulaToBoolean(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToBoolean'
CREATE FUNCTION RATE(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE,par5 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rate'
CREATE FUNCTION ASC(par0 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.asc'
CREATE FUNCTION IIF(par0 BOOLEAN,par1 LONGVARCHAR,par2 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.iif'
CREATE FUNCTION PV(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.pv'
CREATE FUNCTION ISNUMERIC(par0 DECIMAL) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isNumeric'
CREATE FUNCTION IPMT(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE,par5 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ipmt'
CREATE FUNCTION STR(par0 DOUBLE) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.str'
CREATE FUNCTION IsNullWA(par0 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isNull'
CREATE FUNCTION CONTAINS(par0 OBJECT,par1 OBJECT) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.contains'
CREATE FUNCTION CDEC(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cdec'
CREATE FUNCTION INSTRREV(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 INTEGER,par3 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instrrev'
CREATE FUNCTION formulaToDate(par0 TIMESTAMP,par1 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToDate'
CREATE FUNCTION DDB(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ddb'
CREATE FUNCTION DATEPARTWA(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.datePart'
CREATE FUNCTION DATEPARTWA(par0 LONGVARCHAR,par1 TIMESTAMP) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.datePart'
CREATE FUNCTION NZ(par0 INTEGER,par1 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION RND(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rnd'
CREATE FUNCTION NZ(par0 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION VAL(par0 LONGVARCHAR) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.val'
CREATE FUNCTION TIME() RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.time'
CREATE FUNCTION IIF(par0 BOOLEAN,par1 INTEGER,par2 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.iif'
CREATE FUNCTION CSTR(par0 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cstr'
CREATE FUNCTION NZ(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION SQR(par0 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.sqr'
CREATE FUNCTION SIGN(par0 DOUBLE) RETURNS SMALLINT  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.sign'
CREATE FUNCTION ISDATE(par0 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isDate'
CREATE FUNCTION NZ(par0 DECIMAL,par1 DECIMAL) RETURNS DECIMAL  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION NOWWA() RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.now'
CREATE FUNCTION CBOOL(par0 DECIMAL) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cbool'
CREATE FUNCTION FORMAT(par0 VARCHAR(255),par1 VARCHAR(255)) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.format'
CREATE FUNCTION RATE(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rate'
CREATE FUNCTION formulaToNumeric(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToNumeric'
CREATE FUNCTION DATEDIFFWA(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateDiff'
CREATE FUNCTION NPER(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nper'
CREATE FUNCTION CSIGN(par0 DOUBLE) RETURNS FLOAT  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.csign'
CREATE FUNCTION MONTHNAMEWA(par0 INTEGER,par1 BOOLEAN) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.monthName'
CREATE FUNCTION DATEPARTWA(par0 LONGVARCHAR,par1 TIMESTAMP,par2 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.datePart'
CREATE FUNCTION CLONG(par0 BOOLEAN) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.clong'
CREATE FUNCTION INT(par0 BOOLEAN) RETURNS SMALLINT  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.mint'
CREATE FUNCTION CVAR(par0 DOUBLE) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cvar'
CREATE FUNCTION INSTRREV(par0 VARCHAR(255),par1 VARCHAR(255)) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instrrev'
CREATE FUNCTION PMT(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.pmt'
CREATE FUNCTION FV(par0 DOUBLE,par1 INTEGER,par2 DOUBLE,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.fv'
CREATE FUNCTION DATEADDWA(par0 LONGVARCHAR,par1 INTEGER,par2 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateAdd'
CREATE FUNCTION DATEDIFFWA(par0 LONGVARCHAR,par1 TIMESTAMP,par2 TIMESTAMP) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateDiff'
CREATE FUNCTION NPER(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nper'
CREATE FUNCTION PV(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.pv'
CREATE FUNCTION RND() RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rnd'
CREATE FUNCTION DATEPARTWA(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.datePart'
CREATE FUNCTION WEEKDAYNAME(par0 INTEGER,par1 BOOLEAN,par2 INTEGER) RETURNS VARCHAR(255)  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.weekDayName'
CREATE FUNCTION "LEFT$"(par0 LONGVARCHAR,par1 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.leftS'
CREATE FUNCTION IsNullWA(par0 TIMESTAMP) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isNull'
CREATE FUNCTION CBOOL(par0 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cbool'
CREATE FUNCTION DATESERIAL(par0 INTEGER,par1 INTEGER,par2 INTEGER) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateSerial'
CREATE FUNCTION CSTR(par0 BOOLEAN) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cstr'
CREATE FUNCTION CDATE(par0 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cdate'
CREATE FUNCTION CLNG(par0 DOUBLE) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.clng'
CREATE FUNCTION NZ(par0 LONGVARCHAR,par1 LONGVARCHAR) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.nz'
CREATE FUNCTION VAL(par0 DECIMAL) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.val'
CREATE FUNCTION PV(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.pv'
CREATE FUNCTION TIMESERIAL(par0 INTEGER,par1 INTEGER,par2 INTEGER) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.timeserial'
CREATE FUNCTION "RIGHT$"(par0 LONGVARCHAR,par1 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.rightS'
CREATE FUNCTION IsNullWA(par0 DOUBLE) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.isNull'
CREATE FUNCTION INSTRREV(par0 LONGVARCHAR,par1 LONGVARCHAR,par2 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.instrrev'
CREATE FUNCTION CSTR(par0 VARCHAR(255)) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cstr'
CREATE FUNCTION FV(par0 DOUBLE,par1 INTEGER,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.fv'
CREATE FUNCTION DATEDIFFWA(par0 LONGVARCHAR,par1 TIMESTAMP,par2 LONGVARCHAR) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateDiff'
CREATE FUNCTION DATEVALUE(par0 TIMESTAMP) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateValue'
CREATE FUNCTION INT(par0 DOUBLE) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.mint'
CREATE FUNCTION WEEKDAY(par0 TIMESTAMP,par1 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.weekDay'
CREATE FUNCTION formulaToBoolean(par0 DOUBLE,par1 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToBoolean'
CREATE FUNCTION IIF(par0 BOOLEAN,par1 DOUBLE,par2 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.iif'
CREATE FUNCTION DDB(par0 DOUBLE,par1 DOUBLE,par2 DOUBLE,par3 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ddb'
CREATE FUNCTION CSTR(par0 DOUBLE) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cstr'
CREATE FUNCTION MID(par0 LONGVARCHAR,par1 INTEGER) RETURNS LONGVARCHAR  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.mid'
CREATE FUNCTION DATEPARTWA(par0 LONGVARCHAR,par1 TIMESTAMP,par2 INTEGER,par3 INTEGER) RETURNS INTEGER  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.datePart'
CREATE FUNCTION PPMT(par0 DOUBLE,par1 INTEGER,par2 INTEGER,par3 DOUBLE,par4 DOUBLE) RETURNS DOUBLE  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.ppmt'
CREATE FUNCTION EQUALSIGNOREORDER(par0 OBJECT,par1 OBJECT) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.equalsIgnoreOrder'
CREATE FUNCTION CBOOL(par0 BOOLEAN) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.cbool'
CREATE FUNCTION TIMESTAMP0(par0 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.timestamp0'
CREATE FUNCTION DATEVALUE(par0 LONGVARCHAR) RETURNS TIMESTAMP  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.dateValue'
CREATE FUNCTION formulaToBoolean(par0 TIMESTAMP,par1 LONGVARCHAR) RETURNS BOOLEAN  LANGUAGE JAVA DETERMINISTIC NO SQL  EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.Functions.formulaToBoolean'
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ,B3 BOOLEAN ,V3 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ,B3 BOOLEAN ,V3 BLOB ,B4 BOOLEAN ,V4 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ,B3 BOOLEAN ,V3 BLOB ,B4 BOOLEAN ,V4 BLOB ,B5 BOOLEAN ,V5 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ,B3 BOOLEAN ,V3 BLOB ,B4 BOOLEAN ,V4 BLOB ,B5 BOOLEAN ,V5 BLOB ,B6 BOOLEAN ,V6 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ,B3 BOOLEAN ,V3 BLOB ,B4 BOOLEAN ,V4 BLOB ,B5 BOOLEAN ,V5 BLOB ,B6 BOOLEAN ,V6 BLOB ,B7 BOOLEAN ,V7 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BLOB ,B1 BOOLEAN ,V1 BLOB ,B2 BOOLEAN ,V2 BLOB ,B3 BOOLEAN ,V3 BLOB ,B4 BOOLEAN ,V4 BLOB ,B5 BOOLEAN ,V5 BLOB ,B6 BOOLEAN ,V6 BLOB ,B7 BOOLEAN ,V7 BLOB ,B8 BOOLEAN ,V8 BLOB ) RETURNS BLOB  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ,B3 BOOLEAN ,V3 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ,B3 BOOLEAN ,V3 BOOLEAN ,B4 BOOLEAN ,V4 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ,B3 BOOLEAN ,V3 BOOLEAN ,B4 BOOLEAN ,V4 BOOLEAN ,B5 BOOLEAN ,V5 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ,B3 BOOLEAN ,V3 BOOLEAN ,B4 BOOLEAN ,V4 BOOLEAN ,B5 BOOLEAN ,V5 BOOLEAN ,B6 BOOLEAN ,V6 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ,B3 BOOLEAN ,V3 BOOLEAN ,B4 BOOLEAN ,V4 BOOLEAN ,B5 BOOLEAN ,V5 BOOLEAN ,B6 BOOLEAN ,V6 BOOLEAN ,B7 BOOLEAN ,V7 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 BOOLEAN ,B1 BOOLEAN ,V1 BOOLEAN ,B2 BOOLEAN ,V2 BOOLEAN ,B3 BOOLEAN ,V3 BOOLEAN ,B4 BOOLEAN ,V4 BOOLEAN ,B5 BOOLEAN ,V5 BOOLEAN ,B6 BOOLEAN ,V6 BOOLEAN ,B7 BOOLEAN ,V7 BOOLEAN ,B8 BOOLEAN ,V8 BOOLEAN ) RETURNS BOOLEAN  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ,B3 BOOLEAN ,V3 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ,B3 BOOLEAN ,V3 TIMESTAMP ,B4 BOOLEAN ,V4 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ,B3 BOOLEAN ,V3 TIMESTAMP ,B4 BOOLEAN ,V4 TIMESTAMP ,B5 BOOLEAN ,V5 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ,B3 BOOLEAN ,V3 TIMESTAMP ,B4 BOOLEAN ,V4 TIMESTAMP ,B5 BOOLEAN ,V5 TIMESTAMP ,B6 BOOLEAN ,V6 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ,B3 BOOLEAN ,V3 TIMESTAMP ,B4 BOOLEAN ,V4 TIMESTAMP ,B5 BOOLEAN ,V5 TIMESTAMP ,B6 BOOLEAN ,V6 TIMESTAMP ,B7 BOOLEAN ,V7 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 TIMESTAMP ,B1 BOOLEAN ,V1 TIMESTAMP ,B2 BOOLEAN ,V2 TIMESTAMP ,B3 BOOLEAN ,V3 TIMESTAMP ,B4 BOOLEAN ,V4 TIMESTAMP ,B5 BOOLEAN ,V5 TIMESTAMP ,B6 BOOLEAN ,V6 TIMESTAMP ,B7 BOOLEAN ,V7 TIMESTAMP ,B8 BOOLEAN ,V8 TIMESTAMP ) RETURNS TIMESTAMP  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ,B3 BOOLEAN ,V3 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ,B3 BOOLEAN ,V3 SMALLINT ,B4 BOOLEAN ,V4 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ,B3 BOOLEAN ,V3 SMALLINT ,B4 BOOLEAN ,V4 SMALLINT ,B5 BOOLEAN ,V5 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ,B3 BOOLEAN ,V3 SMALLINT ,B4 BOOLEAN ,V4 SMALLINT ,B5 BOOLEAN ,V5 SMALLINT ,B6 BOOLEAN ,V6 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ,B3 BOOLEAN ,V3 SMALLINT ,B4 BOOLEAN ,V4 SMALLINT ,B5 BOOLEAN ,V5 SMALLINT ,B6 BOOLEAN ,V6 SMALLINT ,B7 BOOLEAN ,V7 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 SMALLINT ,B1 BOOLEAN ,V1 SMALLINT ,B2 BOOLEAN ,V2 SMALLINT ,B3 BOOLEAN ,V3 SMALLINT ,B4 BOOLEAN ,V4 SMALLINT ,B5 BOOLEAN ,V5 SMALLINT ,B6 BOOLEAN ,V6 SMALLINT ,B7 BOOLEAN ,V7 SMALLINT ,B8 BOOLEAN ,V8 SMALLINT ) RETURNS SMALLINT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ,B3 BOOLEAN ,V3 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ,B3 BOOLEAN ,V3 INTEGER ,B4 BOOLEAN ,V4 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ,B3 BOOLEAN ,V3 INTEGER ,B4 BOOLEAN ,V4 INTEGER ,B5 BOOLEAN ,V5 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ,B3 BOOLEAN ,V3 INTEGER ,B4 BOOLEAN ,V4 INTEGER ,B5 BOOLEAN ,V5 INTEGER ,B6 BOOLEAN ,V6 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ,B3 BOOLEAN ,V3 INTEGER ,B4 BOOLEAN ,V4 INTEGER ,B5 BOOLEAN ,V5 INTEGER ,B6 BOOLEAN ,V6 INTEGER ,B7 BOOLEAN ,V7 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 INTEGER ,B1 BOOLEAN ,V1 INTEGER ,B2 BOOLEAN ,V2 INTEGER ,B3 BOOLEAN ,V3 INTEGER ,B4 BOOLEAN ,V4 INTEGER ,B5 BOOLEAN ,V5 INTEGER ,B6 BOOLEAN ,V6 INTEGER ,B7 BOOLEAN ,V7 INTEGER ,B8 BOOLEAN ,V8 INTEGER ) RETURNS INTEGER  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ,B3 BOOLEAN ,V3 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ,B3 BOOLEAN ,V3 DOUBLE ,B4 BOOLEAN ,V4 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ,B3 BOOLEAN ,V3 DOUBLE ,B4 BOOLEAN ,V4 DOUBLE ,B5 BOOLEAN ,V5 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ,B3 BOOLEAN ,V3 DOUBLE ,B4 BOOLEAN ,V4 DOUBLE ,B5 BOOLEAN ,V5 DOUBLE ,B6 BOOLEAN ,V6 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ,B3 BOOLEAN ,V3 DOUBLE ,B4 BOOLEAN ,V4 DOUBLE ,B5 BOOLEAN ,V5 DOUBLE ,B6 BOOLEAN ,V6 DOUBLE ,B7 BOOLEAN ,V7 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DOUBLE ,B1 BOOLEAN ,V1 DOUBLE ,B2 BOOLEAN ,V2 DOUBLE ,B3 BOOLEAN ,V3 DOUBLE ,B4 BOOLEAN ,V4 DOUBLE ,B5 BOOLEAN ,V5 DOUBLE ,B6 BOOLEAN ,V6 DOUBLE ,B7 BOOLEAN ,V7 DOUBLE ,B8 BOOLEAN ,V8 DOUBLE ) RETURNS DOUBLE  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ,B3 BOOLEAN ,V3 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ,B3 BOOLEAN ,V3 DECIMAL(100,4) ,B4 BOOLEAN ,V4 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ,B3 BOOLEAN ,V3 DECIMAL(100,4) ,B4 BOOLEAN ,V4 DECIMAL(100,4) ,B5 BOOLEAN ,V5 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ,B3 BOOLEAN ,V3 DECIMAL(100,4) ,B4 BOOLEAN ,V4 DECIMAL(100,4) ,B5 BOOLEAN ,V5 DECIMAL(100,4) ,B6 BOOLEAN ,V6 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ,B3 BOOLEAN ,V3 DECIMAL(100,4) ,B4 BOOLEAN ,V4 DECIMAL(100,4) ,B5 BOOLEAN ,V5 DECIMAL(100,4) ,B6 BOOLEAN ,V6 DECIMAL(100,4) ,B7 BOOLEAN ,V7 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 DECIMAL(100,4) ,B1 BOOLEAN ,V1 DECIMAL(100,4) ,B2 BOOLEAN ,V2 DECIMAL(100,4) ,B3 BOOLEAN ,V3 DECIMAL(100,4) ,B4 BOOLEAN ,V4 DECIMAL(100,4) ,B5 BOOLEAN ,V5 DECIMAL(100,4) ,B6 BOOLEAN ,V6 DECIMAL(100,4) ,B7 BOOLEAN ,V7 DECIMAL(100,4) ,B8 BOOLEAN ,V8 DECIMAL(100,4) ) RETURNS DECIMAL(100,4)  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ,B3 BOOLEAN ,V3 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ,B3 BOOLEAN ,V3 NUMERIC ,B4 BOOLEAN ,V4 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ,B3 BOOLEAN ,V3 NUMERIC ,B4 BOOLEAN ,V4 NUMERIC ,B5 BOOLEAN ,V5 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ,B3 BOOLEAN ,V3 NUMERIC ,B4 BOOLEAN ,V4 NUMERIC ,B5 BOOLEAN ,V5 NUMERIC ,B6 BOOLEAN ,V6 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ,B3 BOOLEAN ,V3 NUMERIC ,B4 BOOLEAN ,V4 NUMERIC ,B5 BOOLEAN ,V5 NUMERIC ,B6 BOOLEAN ,V6 NUMERIC ,B7 BOOLEAN ,V7 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 NUMERIC ,B1 BOOLEAN ,V1 NUMERIC ,B2 BOOLEAN ,V2 NUMERIC ,B3 BOOLEAN ,V3 NUMERIC ,B4 BOOLEAN ,V4 NUMERIC ,B5 BOOLEAN ,V5 NUMERIC ,B6 BOOLEAN ,V6 NUMERIC ,B7 BOOLEAN ,V7 NUMERIC ,B8 BOOLEAN ,V8 NUMERIC ) RETURNS NUMERIC  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ,B3 BOOLEAN ,V3 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ,B3 BOOLEAN ,V3 OBJECT ,B4 BOOLEAN ,V4 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ,B3 BOOLEAN ,V3 OBJECT ,B4 BOOLEAN ,V4 OBJECT ,B5 BOOLEAN ,V5 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ,B3 BOOLEAN ,V3 OBJECT ,B4 BOOLEAN ,V4 OBJECT ,B5 BOOLEAN ,V5 OBJECT ,B6 BOOLEAN ,V6 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ,B3 BOOLEAN ,V3 OBJECT ,B4 BOOLEAN ,V4 OBJECT ,B5 BOOLEAN ,V5 OBJECT ,B6 BOOLEAN ,V6 OBJECT ,B7 BOOLEAN ,V7 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 OBJECT ,B1 BOOLEAN ,V1 OBJECT ,B2 BOOLEAN ,V2 OBJECT ,B3 BOOLEAN ,V3 OBJECT ,B4 BOOLEAN ,V4 OBJECT ,B5 BOOLEAN ,V5 OBJECT ,B6 BOOLEAN ,V6 OBJECT ,B7 BOOLEAN ,V7 OBJECT ,B8 BOOLEAN ,V8 OBJECT ) RETURNS OBJECT  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ,B3 BOOLEAN ,V3 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ,B3 BOOLEAN ,V3 LONGVARCHAR ,B4 BOOLEAN ,V4 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ,B3 BOOLEAN ,V3 LONGVARCHAR ,B4 BOOLEAN ,V4 LONGVARCHAR ,B5 BOOLEAN ,V5 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ,B3 BOOLEAN ,V3 LONGVARCHAR ,B4 BOOLEAN ,V4 LONGVARCHAR ,B5 BOOLEAN ,V5 LONGVARCHAR ,B6 BOOLEAN ,V6 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ,B3 BOOLEAN ,V3 LONGVARCHAR ,B4 BOOLEAN ,V4 LONGVARCHAR ,B5 BOOLEAN ,V5 LONGVARCHAR ,B6 BOOLEAN ,V6 LONGVARCHAR ,B7 BOOLEAN ,V7 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7 END)
CREATE FUNCTION SWITCH(  B0 BOOLEAN ,V0 LONGVARCHAR ,B1 BOOLEAN ,V1 LONGVARCHAR ,B2 BOOLEAN ,V2 LONGVARCHAR ,B3 BOOLEAN ,V3 LONGVARCHAR ,B4 BOOLEAN ,V4 LONGVARCHAR ,B5 BOOLEAN ,V5 LONGVARCHAR ,B6 BOOLEAN ,V6 LONGVARCHAR ,B7 BOOLEAN ,V7 LONGVARCHAR ,B8 BOOLEAN ,V8 LONGVARCHAR ) RETURNS LONGVARCHAR  RETURN(CASE   WHEN B0 THEN V0  WHEN B1 THEN V1  WHEN B2 THEN V2  WHEN B3 THEN V3  WHEN B4 THEN V4  WHEN B5 THEN V5  WHEN B6 THEN V6  WHEN B7 THEN V7  WHEN B8 THEN V8 END)
CREATE AGGREGATE FUNCTION first(IN val DECIMAL(100,10), IN flag BOOLEAN, INOUT register  DECIMAL(100,10), INOUT counter INT)   RETURNS  DECIMAL(100,10)  NO SQL  LANGUAGE JAVA   EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.FunctionsAggregate.first'
CREATE AGGREGATE FUNCTION first(IN val LONGVARCHAR, IN flag BOOLEAN, INOUT register  LONGVARCHAR, INOUT counter INT)   RETURNS  LONGVARCHAR  NO SQL  LANGUAGE JAVA   EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.FunctionsAggregate.first'
CREATE AGGREGATE FUNCTION first(IN val BOOLEAN, IN flag BOOLEAN, INOUT register  BOOLEAN, INOUT counter INT)   RETURNS  BOOLEAN  NO SQL  LANGUAGE JAVA   EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.FunctionsAggregate.first'
CREATE AGGREGATE FUNCTION last(IN val LONGVARCHAR, IN flag BOOLEAN, INOUT register  LONGVARCHAR, INOUT counter INT)   RETURNS  LONGVARCHAR  NO SQL  LANGUAGE JAVA   EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.FunctionsAggregate.last'
CREATE AGGREGATE FUNCTION First(IN val TIMESTAMP, IN flag boolean, INOUT ts TIMESTAMP , INOUT counter INT) RETURNS TIMESTAMP CONTAINS SQL BEGIN ATOMIC IF flag THEN RETURN ts; ELSE IF counter IS NULL THEN SET counter = 0; END IF; SET counter = counter + 1;  IF counter = 1 THEN   SET ts = val; END IF; RETURN NULL; END IF; END 
CREATE AGGREGATE FUNCTION last(IN val TIMESTAMP, IN flag boolean, INOUT ts TIMESTAMP, INOUT counter INT) RETURNS TIMESTAMP CONTAINS SQL BEGIN ATOMIC IF flag THEN RETURN ts; ELSE IF counter IS NULL THEN SET counter = 0; END IF; SET counter = counter + 1; SET ts = val;RETURN NULL; END IF; END 
CREATE AGGREGATE FUNCTION last(IN val BOOLEAN, IN flag BOOLEAN, INOUT register  BOOLEAN, INOUT counter INT)   RETURNS  BOOLEAN  NO SQL  LANGUAGE JAVA   EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.FunctionsAggregate.last'
CREATE AGGREGATE FUNCTION last(IN val DECIMAL(100,10), IN flag BOOLEAN, INOUT register  DECIMAL(100,10), INOUT counter INT)   RETURNS  DECIMAL(100,10)  NO SQL  LANGUAGE JAVA   EXTERNAL NAME 'CLASSPATH:net.ucanaccess.converters.FunctionsAggregate.last'
CREATE SCHEMA UCA_METADATA AUTHORIZATION DBA
CREATE MEMORY TABLE   UCA_METADATA.PROP(NAME LONGVARCHAR PRIMARY KEY, MAX_LEN INTEGER,DEFAULT_VALUE VARCHAR(20),DESCRIPTION LONGVARCHAR) 
CREATE  TABLE UCA_METADATA.TABLES(TABLE_ID INTEGER IDENTITY, TABLE_NAME LONGVARCHAR,ESCAPED_TABLE_NAME LONGVARCHAR, TYPE VARCHAR(5),UNIQUE(TABLE_NAME)) 
CREATE MEMORY TABLE    \u0009\u0009\u0009\u0009UCA_METADATA.COLUMNS(COLUMN_ID INTEGER IDENTITY, COLUMN_NAME LONGVARCHAR,ESCAPED_COLUMN_NAME LONGVARCHAR, \u0009\u0009\u0009\u0009ORIGINAL_TYPE VARCHAR(20),COLUMN_DEF  LONGVARCHAR,IS_GENERATEDCOLUMN VARCHAR(3),TABLE_ID INTEGER, UNIQUE(TABLE_ID,COLUMN_NAME) )
ALTER TABLE UCA_METADATA.COLUMNS   ADD CONSTRAINT UCA_METADATA_FK FOREIGN KEY (TABLE_ID) REFERENCES UCA_METADATA.TABLES (TABLE_ID) ON DELETE CASCADE
CREATE VIEW   UCA_METADATA.COLUMNS_VIEW as SELECT t.TABLE_NAME, c.COLUMN_NAME,t.ESCAPED_TABLE_NAME, c.ESCAPED_COLUMN_NAME,c.COLUMN_DEF,c.IS_GENERATEDCOLUMN,CASE WHEN(c.ORIGINAL_TYPE \u0009IN ('COUNTER' ,'GUID')) THEN 'YES' ELSE 'NO' END as IS_AUTOINCREMENT,c.ORIGINAL_TYPE FROM UCA_METADATA.COLUMNS c INNER JOIN UCA_METADATA.TABLES t ON (t.TABLE_ID=c.TABLE_ID)
SET SCHEMA UCA_METADATA
INSERT INTO PROP VALUES('newdatabaseversion',8,NULL,'see ucanaccess website')
INSERT INTO PROP VALUES('jackcessopener',500,NULL,'see ucanaccess web site')
INSERT INTO PROP VALUES('password',500,NULL,'see ucanaccess web site')
INSERT INTO PROP VALUES('memory',10,'true','see ucanaccess web site')
INSERT INTO PROP VALUES('lobscale',2,'2','see ucanaccess web site')
INSERT INTO PROP VALUES('keepmirror',500,'2','see ucanaccess web site')
INSERT INTO PROP VALUES('showschema',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('inactivitytimeout',10,'2','see ucanaccess web site')
INSERT INTO PROP VALUES('singleconnection',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('immediatelyreleaseresources',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('lockmdb',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('openexclusive',500,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('remap',500,NULL,'see ucanaccess web site')
INSERT INTO PROP VALUES('columnorder',10,'data','see ucanaccess web site')
INSERT INTO PROP VALUES('mirrorfolder',500,NULL,'see ucanaccess web site')
INSERT INTO PROP VALUES('ignorecase',10,'true','see ucanaccess web site')
INSERT INTO PROP VALUES('sysschema',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('skipindexes',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('preventreloading',10,'false','see ucanaccess web site')
INSERT INTO PROP VALUES('concatnulls',10,'false','see ucanaccess web site')
INSERT INTO TABLES VALUES(0,'CartItem','CARTITEM','TABLE')
INSERT INTO COLUMNS VALUES(0,'ID','ID','COUNTER',NULL,'NO',0)
INSERT INTO COLUMNS VALUES(1,'UserId','USERID','TEXT',NULL,'NO',0)
INSERT INTO COLUMNS VALUES(2,'ProductId','PRODUCTID','TEXT',NULL,'NO',0)
INSERT INTO COLUMNS VALUES(3,'ProductName','PRODUCTNAME','TEXT',NULL,'NO',0)
INSERT INTO COLUMNS VALUES(4,'Quantity','QUANTITY','LONG',NULL,'NO',0)
INSERT INTO COLUMNS VALUES(5,'Price','PRICE','MONEY',NULL,'NO',0)
INSERT INTO COLUMNS VALUES(6,'AddDate','ADDDATE','SHORT_DATE_TIME',NULL,'NO',0)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE CARTITEM(ID INTEGER,USERID VARCHAR(255),PRODUCTID VARCHAR(255),PRODUCTNAME VARCHAR(255),QUANTITY INTEGER,PRICE DECIMAL(100,4),ADDDATE TIMESTAMP)
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(1,'Courses','COURSES','TABLE')
INSERT INTO COLUMNS VALUES(7,'courseId','COURSEID','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(8,'courseName','COURSENAME','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(9,'teacherName','TEACHERNAME','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(10,'teacherId','TEACHERID','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(11,'department','DEPARTMENT','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(12,'credit','CREDIT','LONG',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(13,'schedule','SCHEDULE','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(14,'location','LOCATION','TEXT',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(15,'capacity','CAPACITY','LONG',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(16,'selectedNum','SELECTEDNUM','LONG',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(17,'StartWeek','STARTWEEK','LONG',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(18,'endweek','ENDWEEK','LONG',NULL,'NO',1)
INSERT INTO COLUMNS VALUES(19,'semester','SEMESTER','TEXT',NULL,'NO',1)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE COURSES(COURSEID VARCHAR(255) NOT NULL ,COURSENAME VARCHAR(255),TEACHERNAME VARCHAR(255),TEACHERID VARCHAR(255),DEPARTMENT VARCHAR(255),CREDIT INTEGER,SCHEDULE VARCHAR(255),LOCATION VARCHAR(255),CAPACITY INTEGER,SELECTEDNUM INTEGER,STARTWEEK INTEGER,ENDWEEK INTEGER,SEMESTER VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(2,'OrderItem','ORDERITEM','TABLE')
INSERT INTO COLUMNS VALUES(20,'ID','ID','COUNTER',NULL,'NO',2)
INSERT INTO COLUMNS VALUES(21,'OrderId','ORDERID','TEXT',NULL,'NO',2)
INSERT INTO COLUMNS VALUES(22,'ProductId','PRODUCTID','TEXT',NULL,'NO',2)
INSERT INTO COLUMNS VALUES(23,'ProductName','PRODUCTNAME','TEXT',NULL,'NO',2)
INSERT INTO COLUMNS VALUES(24,'Price','PRICE','MONEY',NULL,'NO',2)
INSERT INTO COLUMNS VALUES(25,'Quantity','QUANTITY','LONG',NULL,'NO',2)
INSERT INTO COLUMNS VALUES(26,'Subtotal','SUBTOTAL','MONEY',NULL,'NO',2)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE ORDERITEM(ID INTEGER,ORDERID VARCHAR(255),PRODUCTID VARCHAR(255),PRODUCTNAME VARCHAR(255),PRICE DECIMAL(100,4),QUANTITY INTEGER,SUBTOTAL DECIMAL(100,4))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(3,'Orders','ORDERS','TABLE')
INSERT INTO COLUMNS VALUES(27,'ID','ID','COUNTER',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(28,'OrderId','ORDERID','TEXT',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(29,'UserId','USERID','TEXT',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(30,'OrderDate','ORDERDATE','SHORT_DATE_TIME',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(31,'TotalAmount','TOTALAMOUNT','LONG',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(32,'Status','STATUS','TEXT',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(33,'ShippingAddress','SHIPPINGADDRESS','TEXT',NULL,'NO',3)
INSERT INTO COLUMNS VALUES(34,'ContactPhone','CONTACTPHONE','TEXT',NULL,'NO',3)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE ORDERS(ID INTEGER,ORDERID VARCHAR(255),USERID VARCHAR(255),ORDERDATE TIMESTAMP,TOTALAMOUNT INTEGER,STATUS VARCHAR(255),SHIPPINGADDRESS VARCHAR(255),CONTACTPHONE VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(4,'Product','PRODUCT','TABLE')
INSERT INTO COLUMNS VALUES(35,'ID','ID','COUNTER',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(36,'ProductId','PRODUCTID','TEXT',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(37,'ProductName','PRODUCTNAME','TEXT',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(38,'Description','DESCRIPTION','TEXT',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(39,'Price','PRICE','MONEY',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(40,'Stock','STOCK','LONG',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(41,'Category','CATEGORY','TEXT',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(42,'ImageURL','IMAGEURL','TEXT',NULL,'NO',4)
INSERT INTO COLUMNS VALUES(43,'Location','LOCATION','TEXT',NULL,'NO',4)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE PRODUCT(ID INTEGER,PRODUCTID VARCHAR(255),PRODUCTNAME VARCHAR(255),DESCRIPTION VARCHAR(255),PRICE DECIMAL(100,4),STOCK INTEGER,CATEGORY VARCHAR(255),IMAGEURL VARCHAR(255),LOCATION VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(5,'SelectionRecords','SELECTIONRECORDS','TABLE')
INSERT INTO COLUMNS VALUES(44,'RecordID','RECORDID','COUNTER',NULL,'NO',5)
INSERT INTO COLUMNS VALUES(45,'StudentID','STUDENTID','TEXT',NULL,'NO',5)
INSERT INTO COLUMNS VALUES(46,'StudentName','STUDENTNAME','TEXT',NULL,'NO',5)
INSERT INTO COLUMNS VALUES(47,'CourseID','COURSEID','TEXT',NULL,'NO',5)
INSERT INTO COLUMNS VALUES(48,'CourseName','COURSENAME','TEXT',NULL,'NO',5)
INSERT INTO COLUMNS VALUES(49,'SelectionTime','SELECTIONTIME','SHORT_DATE_TIME',NULL,'NO',5)
INSERT INTO COLUMNS VALUES(50,'Department','DEPARTMENT','TEXT',NULL,'NO',5)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE SELECTIONRECORDS(RECORDID INTEGER,STUDENTID VARCHAR(255),STUDENTNAME VARCHAR(255),COURSEID VARCHAR(255),COURSENAME VARCHAR(255),SELECTIONTIME TIMESTAMP,DEPARTMENT VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(6,'tblAdmin','TBLADMIN','TABLE')
INSERT INTO COLUMNS VALUES(51,'cid','CID','TEXT',NULL,'NO',6)
INSERT INTO COLUMNS VALUES(52,'modules','MODULES','MEMO',NULL,'NO',6)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLADMIN(CID VARCHAR(255) NOT NULL ,MODULES LONGVARCHAR)
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(7,'tblBook','TBLBOOK','TABLE')
INSERT INTO COLUMNS VALUES(53,'ID','ID','COUNTER',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(54,'bIsbn','BISBN','TEXT',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(55,'bTitle','BTITLE','TEXT',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(56,'bAuthor','BAUTHOR','TEXT',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(57,'bPublisher','BPUBLISHER','TEXT',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(58,'bPublishYear','BPUBLISHYEAR','LONG',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(59,'bTotal','BTOTAL','LONG',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(60,'bAvailable','BAVAILABLE','LONG',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(61,'bLocation','BLOCATION','TEXT',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(62,'bImagePath','BIMAGEPATH','TEXT',NULL,'NO',7)
INSERT INTO COLUMNS VALUES(63,'bDescription','BDESCRIPTION','TEXT',NULL,'NO',7)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLBOOK(ID INTEGER,BISBN VARCHAR(255) NOT NULL ,BTITLE VARCHAR(255),BAUTHOR VARCHAR(50),BPUBLISHER VARCHAR(50),BPUBLISHYEAR INTEGER,BTOTAL INTEGER,BAVAILABLE INTEGER,BLOCATION VARCHAR(255),BIMAGEPATH VARCHAR(255),BDESCRIPTION VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(8,'tblBorrowRecord','TBLBORROWRECORD','TABLE')
INSERT INTO COLUMNS VALUES(64,'ID','ID','COUNTER',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(65,'userId','USERID','TEXT',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(66,'bookIsbn','BOOKISBN','TEXT',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(67,'bookTitle','BOOKTITLE','TEXT',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(68,'borrowDate','BORROWDATE','SHORT_DATE_TIME',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(69,'dueDate','DUEDATE','SHORT_DATE_TIME',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(70,'Returndate','RETURNDATE','SHORT_DATE_TIME',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(71,'status','STATUS','TEXT',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(72,'fineAmount','FINEAMOUNT','LONG',NULL,'NO',8)
INSERT INTO COLUMNS VALUES(73,'renewalCount','RENEWALCOUNT','LONG',NULL,'NO',8)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLBORROWRECORD(ID INTEGER,USERID VARCHAR(255) NOT NULL ,BOOKISBN VARCHAR(255),BOOKTITLE VARCHAR(50),BORROWDATE TIMESTAMP,DUEDATE TIMESTAMP,RETURNDATE TIMESTAMP,STATUS VARCHAR(255),FINEAMOUNT INTEGER,RENEWALCOUNT INTEGER)
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(9,'tblDormApplication','TBLDORMAPPLICATION','TABLE')
INSERT INTO COLUMNS VALUES(74,'applicationId','APPLICATIONID','COUNTER',NULL,'NO',9)
INSERT INTO COLUMNS VALUES(75,'studentId','STUDENTID','TEXT',NULL,'NO',9)
INSERT INTO COLUMNS VALUES(76,'applicationType','APPLICATIONTYPE','TEXT',NULL,'NO',9)
INSERT INTO COLUMNS VALUES(77,'applicationTime','APPLICATIONTIME','SHORT_DATE_TIME',NULL,'NO',9)
INSERT INTO COLUMNS VALUES(78,'applicationStatus','APPLICATIONSTATUS','TEXT',NULL,'NO',9)
INSERT INTO COLUMNS VALUES(79,'reviewer','REVIEWER','TEXT',NULL,'NO',9)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLDORMAPPLICATION(APPLICATIONID INTEGER,STUDENTID VARCHAR(50),APPLICATIONTYPE VARCHAR(50),APPLICATIONTIME TIMESTAMP,APPLICATIONSTATUS VARCHAR(50),REVIEWER VARCHAR(50))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(10,'tblDormInfo','TBLDORMINFO','TABLE')
INSERT INTO COLUMNS VALUES(80,'studentId','STUDENTID','TEXT',NULL,'NO',10)
INSERT INTO COLUMNS VALUES(81,'name','NAME','TEXT',NULL,'NO',10)
INSERT INTO COLUMNS VALUES(82,'building','BUILDING','TEXT',NULL,'NO',10)
INSERT INTO COLUMNS VALUES(83,'roomNumber','ROOMNUMBER','TEXT',NULL,'NO',10)
INSERT INTO COLUMNS VALUES(84,'bedNumber','BEDNUMBER','TEXT',NULL,'NO',10)
INSERT INTO COLUMNS VALUES(85,'checkInDate','CHECKINDATE','SHORT_DATE_TIME',NULL,'NO',10)
INSERT INTO COLUMNS VALUES(86,'status','STATUS','TEXT',NULL,'NO',10)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLDORMINFO(STUDENTID VARCHAR(50) NOT NULL ,NAME VARCHAR(100) NOT NULL ,BUILDING VARCHAR(50),ROOMNUMBER VARCHAR(50),BEDNUMBER VARCHAR(50),CHECKINDATE TIMESTAMP,STATUS VARCHAR(50))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(11,'tblDormService','TBLDORMSERVICE','TABLE')
INSERT INTO COLUMNS VALUES(87,'serviceId','SERVICEID','COUNTER',NULL,'NO',11)
INSERT INTO COLUMNS VALUES(88,'studentId','STUDENTID','TEXT',NULL,'NO',11)
INSERT INTO COLUMNS VALUES(89,'serviceDescription','SERVICEDESCRIPTION','MEMO',NULL,'NO',11)
INSERT INTO COLUMNS VALUES(90,'serviceTime','SERVICETIME','SHORT_DATE_TIME',NULL,'NO',11)
INSERT INTO COLUMNS VALUES(91,'serviceStatus','SERVICESTATUS','TEXT',NULL,'NO',11)
INSERT INTO COLUMNS VALUES(92,'serviceProcessor','SERVICEPROCESSOR','TEXT',NULL,'NO',11)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLDORMSERVICE(SERVICEID INTEGER,STUDENTID VARCHAR(50),SERVICEDESCRIPTION LONGVARCHAR,SERVICETIME TIMESTAMP,SERVICESTATUS VARCHAR(50),SERVICEPROCESSOR VARCHAR(50))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(12,'tblReservation','TBLRESERVATION','TABLE')
INSERT INTO COLUMNS VALUES(93,'ID','ID','COUNTER',NULL,'NO',12)
INSERT INTO COLUMNS VALUES(94,'userId','USERID','TEXT',NULL,'NO',12)
INSERT INTO COLUMNS VALUES(95,'bookIsbn','BOOKISBN','TEXT',NULL,'NO',12)
INSERT INTO COLUMNS VALUES(96,'bookTitle','BOOKTITLE','TEXT',NULL,'NO',12)
INSERT INTO COLUMNS VALUES(97,'reservationDate','RESERVATIONDATE','SHORT_DATE_TIME',NULL,'NO',12)
INSERT INTO COLUMNS VALUES(98,'status','STATUS','TEXT',NULL,'NO',12)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLRESERVATION(ID INTEGER,USERID VARCHAR(255),BOOKISBN VARCHAR(255),BOOKTITLE VARCHAR(255),RESERVATIONDATE TIMESTAMP,STATUS VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(13,'tblStudent','TBLSTUDENT','TABLE')
INSERT INTO COLUMNS VALUES(99,'cid','CID','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(100,'gender','GENDER','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(101,'birthday','BIRTHDAY','SHORT_DATE_TIME',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(102,'address','ADDRESS','MEMO',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(103,'nid','NID','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(104,'endate','ENDATE','SHORT_DATE_TIME',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(105,'grade','GRADE','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(106,'major','MAJOR','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(107,'stid','STID','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(108,'es','ES','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(109,'esState','ESSTATE','TEXT',NULL,'NO',13)
INSERT INTO COLUMNS VALUES(110,'age','AGE','LONG',NULL,'NO',13)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLSTUDENT(CID VARCHAR(255) NOT NULL ,GENDER VARCHAR(255),BIRTHDAY TIMESTAMP,ADDRESS LONGVARCHAR,NID VARCHAR(255),ENDATE TIMESTAMP,GRADE VARCHAR(255),MAJOR VARCHAR(255),STID VARCHAR(255),ES VARCHAR(255),ESSTATE VARCHAR(255),AGE INTEGER)
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(14,'tblTeacher','TBLTEACHER','TABLE')
INSERT INTO COLUMNS VALUES(111,'cid','CID','TEXT',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(112,'age','AGE','LONG',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(113,'gender','GENDER','TEXT',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(114,'address','ADDRESS','MEMO',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(115,'nid','NID','TEXT',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(116,'endate','ENDATE','SHORT_DATE_TIME',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(117,'title','TITLE','MEMO',NULL,'NO',14)
INSERT INTO COLUMNS VALUES(118,'department','DEPARTMENT','TEXT',NULL,'NO',14)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLTEACHER(CID VARCHAR(255) NOT NULL ,AGE INTEGER,GENDER VARCHAR(255),ADDRESS LONGVARCHAR,NID VARCHAR(255),ENDATE TIMESTAMP,TITLE LONGVARCHAR,DEPARTMENT VARCHAR(255))
SET SCHEMA UCA_METADATA
INSERT INTO TABLES VALUES(15,'tblUser','TBLUSER','TABLE')
INSERT INTO COLUMNS VALUES(119,'cid','CID','TEXT',NULL,'NO',15)
INSERT INTO COLUMNS VALUES(120,'password','PASSWORD','MEMO',NULL,'NO',15)
INSERT INTO COLUMNS VALUES(121,'tsid','TSID','TEXT',NULL,'NO',15)
INSERT INTO COLUMNS VALUES(122,'tname','TNAME','TEXT',NULL,'NO',15)
INSERT INTO COLUMNS VALUES(123,'email','EMAIL','TEXT',NULL,'NO',15)
INSERT INTO COLUMNS VALUES(124,'phone','PHONE','TEXT',NULL,'NO',15)
INSERT INTO COLUMNS VALUES(125,'role','ROLE','TEXT',NULL,'NO',15)
COMMIT
SET SCHEMA PUBLIC
CREATE  CACHED TABLE TBLUSER(CID VARCHAR(255) NOT NULL ,PASSWORD LONGVARCHAR,TSID VARCHAR(255),TNAME VARCHAR(255),EMAIL VARCHAR(255),PHONE VARCHAR(255),ROLE VARCHAR(255))
ALTER TABLE CARTITEM ADD PRIMARY KEY  (ID) 
ALTER TABLE COURSES ADD PRIMARY KEY  (COURSEID) 
ALTER TABLE ORDERITEM ADD PRIMARY KEY  (ID) 
ALTER TABLE ORDERS ADD PRIMARY KEY  (ID) 
ALTER TABLE PRODUCT ADD PRIMARY KEY  (ID) 
ALTER TABLE SELECTIONRECORDS ADD PRIMARY KEY  (RECORDID) 
ALTER TABLE TBLADMIN ADD PRIMARY KEY  (CID) 
ALTER TABLE TBLBOOK ADD PRIMARY KEY  (ID) 
ALTER TABLE TBLBORROWRECORD ADD PRIMARY KEY  (ID) 
ALTER TABLE TBLDORMAPPLICATION ADD PRIMARY KEY  (APPLICATIONID) 
ALTER TABLE TBLDORMINFO ADD PRIMARY KEY  (STUDENTID) 
ALTER TABLE TBLDORMSERVICE ADD PRIMARY KEY  (SERVICEID) 
ALTER TABLE TBLRESERVATION ADD PRIMARY KEY  (ID) 
ALTER TABLE TBLSTUDENT ADD PRIMARY KEY  (CID) 
ALTER TABLE TBLTEACHER ADD PRIMARY KEY  (CID) 
ALTER TABLE TBLUSER ADD PRIMARY KEY  (CID) 
CREATE INDEX CARTITEM_PRODUCTID ON CARTITEM (PRODUCTID) 
CREATE INDEX CARTITEM_USERID ON CARTITEM (USERID) 
CREATE INDEX COURSES_SELECTEDNUM ON COURSES (SELECTEDNUM) 
CREATE INDEX COURSES_TEACHERID ON COURSES (TEACHERNAME) 
CREATE INDEX COURSES_TEACHERID1 ON COURSES (TEACHERID) 
CREATE INDEX ORDERITEM_ORDERID ON ORDERITEM (ORDERID) 
CREATE INDEX ORDERITEM_ORDERITEMID ON ORDERITEM (PRODUCTID) 
CREATE INDEX ORDERS_ORDERID ON ORDERS (ORDERID) 
CREATE INDEX ORDERS_USERID ON ORDERS (USERID) 
CREATE INDEX PRODUCT_PRODUCTID ON PRODUCT (PRODUCTID) 
CREATE INDEX SELECTIONRECORDS_COURSEID ON SELECTIONRECORDS (COURSEID) 
CREATE INDEX SELECTIONRECORDS_STUDENTID ON SELECTIONRECORDS (STUDENTID) 
CREATE INDEX TBLADMIN_CID ON TBLADMIN (CID) 
CREATE INDEX TBLBOOK_ID ON TBLBOOK (ID) 
CREATE INDEX TBLBORROWRECORD_USERID ON TBLBORROWRECORD (USERID) 
CREATE INDEX TBLBORROWRECORD_ID ON TBLBORROWRECORD (ID) 
CREATE INDEX TBLRESERVATION_USERID ON TBLRESERVATION (USERID) 
CREATE INDEX TBLSTUDENT_CID ON TBLSTUDENT (CID) 
CREATE INDEX TBLSTUDENT_NID ON TBLSTUDENT (NID) 
CREATE INDEX TBLSTUDENT_STID ON TBLSTUDENT (STID) 
CREATE INDEX TBLTEACHER_CID ON TBLTEACHER (CID) 
CREATE INDEX TBLTEACHER_NID ON TBLTEACHER (NID) 
CREATE INDEX TBLUSER_CID ON TBLUSER (CID) 
CREATE INDEX TBLUSER_TSID ON TBLUSER (TSID) 
INSERT INTO COURSES VALUES('C001','\u73b0\u4ee3\u6587\u5b66\u9274\u8d4f','\u5f20\u6559\u6388','T003','\u6587\u5b66\u5b66\u9662',2,'\u5468\u4e09 1-2\u8282','\u6559\u5b66\u697c2',20,3,3,15,'2025-2026-1')
INSERT INTO COURSES VALUES('Cs001','\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5','\u674e\u6559\u6388','T001','\u8ba1\u7b97\u673a\u5b66\u9662',3,'\u5468\u4e8c 3-4\u8282','\u6559\u5b66\u697c1',50,1,1,20,'2025-2026-1')
INSERT INTO COURSES VALUES('Cs002','\u8ba1\u7b97\u673a\u5bfc\u8bba','\u949f\u6559\u6388','T004','\u8ba1\u7b97\u673a\u5b66\u9662',2,'\u5468\u56db 3-5\u8282','\u6559\u5b66\u697c2',30,1,1,16,'2025-2026-1')
INSERT INTO COURSES VALUES('M001','\u9ad8\u7b49\u6570\u5b66','\u5218\u6559\u6388','T002','\u6570\u5b66\u5b66\u9662',5,'\u5468\u4e8c 3-4\u8282','\u6559\u5b66\u697c3',30,30,1,20,'2025-2026-1')
COMMIT
INSERT INTO ORDERITEM VALUES(1,'seu2021001','20210001','\u4e50\u4e8b\u7ecf\u5178\u539f\u5473\u85af\u7247',3.5000,2,7.0000)
COMMIT
INSERT INTO ORDERS VALUES(1,'seu2021001',NULL,'2021-08-11 00:00:00.000000',NULL,'pending',NULL,NULL)
COMMIT
INSERT INTO PRODUCT VALUES(1,'20210001','\u4e50\u4e8b\u7ecf\u5178\u539f\u5473\u85af\u7247',NULL,3.5000,20,'\u98df\u54c1','C:\Users\\u4f55\u7965\u88d5\Pictures\005DzJMHgy1hytlil1xhkj30m80m8jsr.jpg','\u6843\u56ed\u98df\u5802')
INSERT INTO PRODUCT VALUES(2,'20210002','\u5f97\u529b\u9ed1\u82720.5mm\u5b50\u5f39\u5934\u4e2d\u6027\u7b14',NULL,2.0000,50,'\u6587\u5177','C:\Users\\u4f55\u7965\u88d5\Pictures\oD6ygpXhCuK9YKX5m4yrRw.jpg','\u6843\u56ed\u98df\u5802')
INSERT INTO PRODUCT VALUES(3,'20210003','100\u514b\u00d78\u676f\u8499\u725b\u539f\u5473\u9178\u725b\u5976',NULL,20.0000,5,'\u98df\u54c1','C:\Users\\u4f55\u7965\u88d5\Pictures\src=http___img.alicdn.com_bao_uploaded_i4_725677994_O1CN01v8iLue28vIhCeylG0_!!0-item_pic.jpg&refer=http___img.alicdn.jpg','\u6843\u56ed\u98df\u5802')
INSERT INTO PRODUCT VALUES(4,'20210004','\u5b89\u8e0f\u7ade\u901f\u8df3\u7ef3',NULL,10.0000,10,'\u4f53\u80b2\u5668\u6750','C:\Users\\u4f55\u7965\u88d5\Pictures\a8014c086e061d95f30d15e64924d4de60d9ca81.jpg','\u6885\u56ed\u98df\u5802')
INSERT INTO PRODUCT VALUES(5,'20210005','\u5eb7\u5e08\u5085\u5927\u98df\u6876BIG\u7ea2\u70e7\u725b\u8089\u9762',NULL,5.0000,20,'\u98df\u54c1','C:\Users\\u4f55\u7965\u88d5\Pictures\src=http___img.alicdn.com_i3_725677994_O1CN01cq4oxq28vIikAXtpJ_!!725677994.jpg&refer=http___img.alicdn.jpg','\u6885\u56ed\u98df\u5802')
INSERT INTO PRODUCT VALUES(6,'20210006','111',NULL,NULL,NULL,'111','111','111')
COMMIT
INSERT INTO SELECTIONRECORDS VALUES(1,'213230001','\u5976\u9f99','C001','\u73b0\u4ee3\u6587\u5b66\u9274\u8d4f','2025-09-12 09:00:00.000000','\u8ba1\u7b97\u673a\u5b66\u9662')
INSERT INTO SELECTIONRECORDS VALUES(2,'213230001','\u5976\u9f99','Cs001','\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5','2025-09-15 19:20:51.339000','\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u5de5\u7a0b')
INSERT INTO SELECTIONRECORDS VALUES(3,'213230001','\u5976\u9f99','Cs002','\u8ba1\u7b97\u673a\u5bfc\u8bba','2025-09-15 19:44:27.507000','\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u5de5\u7a0b')
COMMIT
INSERT INTO TBLADMIN VALUES('000000000','All')
INSERT INTO TBLADMIN VALUES('000000001','Library')
INSERT INTO TBLADMIN VALUES('000000002','Shop')
COMMIT
INSERT INTO TBLBOOK VALUES(1,'9787111636665','Python\u7f16\u7a0b','Mark Lutz','\u4e2d\u56fd\u7535\u529b\u51fa\u7248\u793e',2020,5,0,'\u4e5d\u9f99\u6e56B\u533a','D:/idea_project/vCampus/Images/default_book.jpg',NULL)
INSERT INTO TBLBOOK VALUES(2,'9787302518383','Java\u6838\u5fc3\u6280\u672f','Cay S. Horstmann','\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e',2025,10,9,'\u4e5d\u9f99\u6e56A\u533a','D:/idea_project/vCampus/Images/default_book.jpg',NULL)
INSERT INTO TBLBOOK VALUES(3,'9787115537977','\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf','Randal E.Bryant','\u673a\u68b0\u5de5\u4e1a\u51fa\u7248\u793e',2021,8,5,'\u56db\u724c\u697cA\u533a','D:/idea_project/vCampus/Images/default_book.jpg',NULL)
INSERT INTO TBLBOOK VALUES(4,'9787121382061','\u7b97\u6cd5\u5bfc\u8bba','Thomas H.Cormen','\u7535\u5b50\u5de5\u4e1a\u51fa\u7248\u793e',2020,15,12,'\u56db\u724c\u697cC\u533a','D:/idea_project/vCampus/Images/default_book.jpg',NULL)
INSERT INTO TBLBOOK VALUES(7,'222','222','222','222',222,222,222,'222','222',NULL)
INSERT INTO TBLBOOK VALUES(8,'1','1','1','1',1,1,1,'1','1',NULL)
INSERT INTO TBLBOOK VALUES(9,'3','3','3','3',3,3,3,'3','3',NULL)
COMMIT
INSERT INTO TBLBORROWRECORD VALUES(1,'20210001','9787111636665','Python\u7f16\u7a0b','2025-09-11 00:00:00.000000','2025-10-01 00:00:00.000000',NULL,'BORROWED',0,0)
INSERT INTO TBLBORROWRECORD VALUES(2,'20210001','9787302518383','Java\u6838\u5fc3\u6280\u672f','2025-08-01 00:00:00.000000','2025-09-01 00:00:00.000000',NULL,'OVERDUE',5,0)
INSERT INTO TBLBORROWRECORD VALUES(5,'20210002','9787302518383','Java\u6838\u5fc3\u6280\u672f','2025-09-12 14:35:04.757000','2025-10-12 14:35:04.757000','2025-09-12 14:54:33.676000','RETURNED',0,0)
INSERT INTO TBLBORROWRECORD VALUES(7,'20210001','9787115537977','\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf','2025-09-12 14:38:43.803000','2025-10-12 14:38:43.803000','2025-09-12 14:44:29.715000','RETURNED',0,0)
COMMIT
INSERT INTO TBLDORMAPPLICATION VALUES(1,'20240011','\u8c03\u6574','2025-09-12 00:00:00.000000','\u5f85\u5ba1\u6838','\u5f20\u516d')
INSERT INTO TBLDORMAPPLICATION VALUES(2,'20250088','\u5165\u4f4f','2025-08-24 00:00:00.000000','\u5df2\u6279\u51c6','\u5f20\u516d')
COMMIT
INSERT INTO TBLDORMINFO VALUES('20250066','\u5f20\u56db','\u6843\u516bA','221','1','2025-08-27 00:00:00.000000','\u5728\u4f4f')
INSERT INTO TBLDORMINFO VALUES('20200025','\u5f20\u4e94','\u6885\u4e03B','111','2','2020-08-25 00:00:00.000000','\u5df2\u9000\u5bbf')
COMMIT
INSERT INTO TBLDORMSERVICE VALUES(1,'20210001','\u7a7a\u8c03\u62a5\u4fee','2025-09-13 00:00:00.000000','\u5f85\u5904\u7406','\u5f20\u4e09')
INSERT INTO TBLDORMSERVICE VALUES(2,'20220003','\u5395\u6240\u6f0f\u6c34','2025-09-01 00:00:00.000000','\u5df2\u5b8c\u6210','\u674e\u56db')
INSERT INTO TBLDORMSERVICE VALUES(3,'20230005','\u5bbf\u820d\u6e05\u7406','2025-09-09 00:00:00.000000','\u5904\u7406\u4e2d','\u738b\u4e94')
COMMIT
INSERT INTO TBLRESERVATION VALUES(1,'20210001','9787111636665','Python\u7f16\u7a0b','2025-09-29 00:00:00.000000','PENDING')
COMMIT
INSERT INTO TBLSTUDENT VALUES('213230001','male','2005-09-12 00:00:00.000000','\u5357\u4eac\u5e02\u6c5f\u5b81\u533a\u4e1c\u5357\u5927\u5b66\u8def3\u53f7','100000200509124213','2023-08-21 00:00:00.000000','\u5927\u4e09','\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u5de5\u7a0b','102030405','\u56db\u5e74','\u5728\u7c4d',20)
COMMIT
INSERT INTO TBLTEACHER VALUES('101230001',40,'male','\u5357\u4eac\u5e02\u6c5f\u5b81\u533a\u4e1c\u5357\u5927\u5b66\u8def2\u53f7','100000198509124213','2020-08-21 00:00:00.000000','\u6559\u6388','\u8f6f\u4ef6\u5b66\u9662')
COMMIT
INSERT INTO TBLUSER VALUES('000000000','seuseuseu','09023000','ADMIN','2668526118@qq.com','13865865043','AD')
INSERT INTO TBLUSER VALUES('213230001','123456','09023001','\u5976\u9f99','longnai@seu.edu.cn','10086','ST')
INSERT INTO TBLUSER VALUES('101230001','123456','09123001','\u5510','tang@seu.edu.cn','10085','TC')
INSERT INTO TBLUSER VALUES('213230002','123456','09023002','\u5c0f\u5976\u9f99','xnl@seu.edu.cn','10084','ST')
COMMIT
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=4
INSERT INTO COLUMNS VALUES(4,'Quantity','QUANTITY','LONG','0','NO',0)
DELETE FROM COLUMNS WHERE COLUMN_ID=5
INSERT INTO COLUMNS VALUES(5,'Price','PRICE','MONEY','0','NO',0)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER0 BEFORE INSERT ON CARTITEM  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.QUANTITY IS NULL THEN SET NEW.QUANTITY= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER1 BEFORE INSERT ON CARTITEM  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.PRICE IS NULL THEN SET NEW.PRICE= 0 ; END IF
CREATE TRIGGER GENERICINSERT_CARTITEM  AFTER INSERT ON CARTITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_CARTITEM  AFTER UPDATE ON CARTITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_CARTITEM  AFTER DELETE ON CARTITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_CARTITEM  BEFORE INSERT ON CARTITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_CARTITEM  BEFORE UPDATE ON CARTITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=12
INSERT INTO COLUMNS VALUES(12,'credit','CREDIT','LONG','0','NO',1)
DELETE FROM COLUMNS WHERE COLUMN_ID=15
INSERT INTO COLUMNS VALUES(15,'capacity','CAPACITY','LONG','0','NO',1)
DELETE FROM COLUMNS WHERE COLUMN_ID=16
INSERT INTO COLUMNS VALUES(16,'selectedNum','SELECTEDNUM','LONG','0','NO',1)
DELETE FROM COLUMNS WHERE COLUMN_ID=17
INSERT INTO COLUMNS VALUES(17,'StartWeek','STARTWEEK','LONG','0','NO',1)
DELETE FROM COLUMNS WHERE COLUMN_ID=18
INSERT INTO COLUMNS VALUES(18,'endweek','ENDWEEK','LONG','0','NO',1)
DELETE FROM COLUMNS WHERE COLUMN_ID=19
INSERT INTO COLUMNS VALUES(19,'semester','SEMESTER','TEXT','2025-2026-1','NO',1)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER2 BEFORE INSERT ON COURSES  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.CREDIT IS NULL THEN SET NEW.CREDIT= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER3 BEFORE INSERT ON COURSES  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.CAPACITY IS NULL THEN SET NEW.CAPACITY= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER4 BEFORE INSERT ON COURSES  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.SELECTEDNUM IS NULL THEN SET NEW.SELECTEDNUM= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER5 BEFORE INSERT ON COURSES  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.STARTWEEK IS NULL THEN SET NEW.STARTWEEK= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER6 BEFORE INSERT ON COURSES  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.ENDWEEK IS NULL THEN SET NEW.ENDWEEK= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER7 BEFORE INSERT ON COURSES  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.SEMESTER IS NULL THEN SET NEW.SEMESTER= '2025-2026-1' ; END IF
CREATE TRIGGER GENERICINSERT_COURSES  AFTER INSERT ON COURSES   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_COURSES  AFTER UPDATE ON COURSES   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_COURSES  AFTER DELETE ON COURSES   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=24
INSERT INTO COLUMNS VALUES(24,'Price','PRICE','MONEY','0','NO',2)
DELETE FROM COLUMNS WHERE COLUMN_ID=25
INSERT INTO COLUMNS VALUES(25,'Quantity','QUANTITY','LONG','0','NO',2)
DELETE FROM COLUMNS WHERE COLUMN_ID=26
INSERT INTO COLUMNS VALUES(26,'Subtotal','SUBTOTAL','MONEY','0','NO',2)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER8 BEFORE INSERT ON ORDERITEM  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.PRICE IS NULL THEN SET NEW.PRICE= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER9 BEFORE INSERT ON ORDERITEM  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.QUANTITY IS NULL THEN SET NEW.QUANTITY= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER10 BEFORE INSERT ON ORDERITEM  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.SUBTOTAL IS NULL THEN SET NEW.SUBTOTAL= 0 ; END IF
CREATE TRIGGER GENERICINSERT_ORDERITEM  AFTER INSERT ON ORDERITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_ORDERITEM  AFTER UPDATE ON ORDERITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_ORDERITEM  AFTER DELETE ON ORDERITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_ORDERITEM  BEFORE INSERT ON ORDERITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_ORDERITEM  BEFORE UPDATE ON ORDERITEM   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=31
INSERT INTO COLUMNS VALUES(31,'TotalAmount','TOTALAMOUNT','LONG','0','NO',3)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER11 BEFORE INSERT ON ORDERS  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.TOTALAMOUNT IS NULL THEN SET NEW.TOTALAMOUNT= 0 ; END IF
CREATE TRIGGER GENERICINSERT_ORDERS  AFTER INSERT ON ORDERS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_ORDERS  AFTER UPDATE ON ORDERS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_ORDERS  AFTER DELETE ON ORDERS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_ORDERS  BEFORE INSERT ON ORDERS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_ORDERS  BEFORE UPDATE ON ORDERS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=39
INSERT INTO COLUMNS VALUES(39,'Price','PRICE','MONEY','0','NO',4)
DELETE FROM COLUMNS WHERE COLUMN_ID=40
INSERT INTO COLUMNS VALUES(40,'Stock','STOCK','LONG','0','NO',4)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER12 BEFORE INSERT ON PRODUCT  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.PRICE IS NULL THEN SET NEW.PRICE= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER13 BEFORE INSERT ON PRODUCT  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.STOCK IS NULL THEN SET NEW.STOCK= 0 ; END IF
CREATE TRIGGER GENERICINSERT_PRODUCT  AFTER INSERT ON PRODUCT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_PRODUCT  AFTER UPDATE ON PRODUCT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_PRODUCT  AFTER DELETE ON PRODUCT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_PRODUCT  BEFORE INSERT ON PRODUCT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_PRODUCT  BEFORE UPDATE ON PRODUCT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER GENERICINSERT_SELECTIONRECORDS  AFTER INSERT ON SELECTIONRECORDS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_SELECTIONRECORDS  AFTER UPDATE ON SELECTIONRECORDS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_SELECTIONRECORDS  AFTER DELETE ON SELECTIONRECORDS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_SELECTIONRECORDS  BEFORE INSERT ON SELECTIONRECORDS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_SELECTIONRECORDS  BEFORE UPDATE ON SELECTIONRECORDS   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER GENERICINSERT_TBLADMIN  AFTER INSERT ON TBLADMIN   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLADMIN  AFTER UPDATE ON TBLADMIN   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLADMIN  AFTER DELETE ON TBLADMIN   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER GENERICINSERT_TBLBOOK  AFTER INSERT ON TBLBOOK   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLBOOK  AFTER UPDATE ON TBLBOOK   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLBOOK  AFTER DELETE ON TBLBOOK   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_TBLBOOK  BEFORE INSERT ON TBLBOOK   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_TBLBOOK  BEFORE UPDATE ON TBLBOOK   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=72
INSERT INTO COLUMNS VALUES(72,'fineAmount','FINEAMOUNT','LONG','0','NO',8)
DELETE FROM COLUMNS WHERE COLUMN_ID=73
INSERT INTO COLUMNS VALUES(73,'renewalCount','RENEWALCOUNT','LONG','0','NO',8)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER14 BEFORE INSERT ON TBLBORROWRECORD  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.FINEAMOUNT IS NULL THEN SET NEW.FINEAMOUNT= 0 ; END IF
CREATE TRIGGER DEFAULT_TRIGGER15 BEFORE INSERT ON TBLBORROWRECORD  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.RENEWALCOUNT IS NULL THEN SET NEW.RENEWALCOUNT= 0 ; END IF
CREATE TRIGGER GENERICINSERT_TBLBORROWRECORD  AFTER INSERT ON TBLBORROWRECORD   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLBORROWRECORD  AFTER UPDATE ON TBLBORROWRECORD   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLBORROWRECORD  AFTER DELETE ON TBLBORROWRECORD   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_TBLBORROWRECORD  BEFORE INSERT ON TBLBORROWRECORD   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_TBLBORROWRECORD  BEFORE UPDATE ON TBLBORROWRECORD   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER GENERICINSERT_TBLDORMAPPLICATION  AFTER INSERT ON TBLDORMAPPLICATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLDORMAPPLICATION  AFTER UPDATE ON TBLDORMAPPLICATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLDORMAPPLICATION  AFTER DELETE ON TBLDORMAPPLICATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_TBLDORMAPPLICATION  BEFORE INSERT ON TBLDORMAPPLICATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_TBLDORMAPPLICATION  BEFORE UPDATE ON TBLDORMAPPLICATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER GENERICINSERT_TBLDORMINFO  AFTER INSERT ON TBLDORMINFO   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLDORMINFO  AFTER UPDATE ON TBLDORMINFO   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLDORMINFO  AFTER DELETE ON TBLDORMINFO   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER GENERICINSERT_TBLDORMSERVICE  AFTER INSERT ON TBLDORMSERVICE   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLDORMSERVICE  AFTER UPDATE ON TBLDORMSERVICE   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLDORMSERVICE  AFTER DELETE ON TBLDORMSERVICE   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_TBLDORMSERVICE  BEFORE INSERT ON TBLDORMSERVICE   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_TBLDORMSERVICE  BEFORE UPDATE ON TBLDORMSERVICE   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER GENERICINSERT_TBLRESERVATION  AFTER INSERT ON TBLRESERVATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLRESERVATION  AFTER UPDATE ON TBLRESERVATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLRESERVATION  AFTER DELETE ON TBLRESERVATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER AUTONUMBER_TBLRESERVATION  BEFORE INSERT ON TBLRESERVATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
CREATE TRIGGER AUTONUMBER_VALIDATE_TBLRESERVATION  BEFORE UPDATE ON TBLRESERVATION   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerAutoNumber" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=110
INSERT INTO COLUMNS VALUES(110,'age','AGE','LONG','0','NO',13)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER16 BEFORE INSERT ON TBLSTUDENT  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.AGE IS NULL THEN SET NEW.AGE= 0 ; END IF
CREATE TRIGGER GENERICINSERT_TBLSTUDENT  AFTER INSERT ON TBLSTUDENT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLSTUDENT  AFTER UPDATE ON TBLSTUDENT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLSTUDENT  AFTER DELETE ON TBLSTUDENT   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
SET SCHEMA UCA_METADATA
DELETE FROM COLUMNS WHERE COLUMN_ID=112
INSERT INTO COLUMNS VALUES(112,'age','AGE','LONG','0','NO',14)
COMMIT
SET SCHEMA PUBLIC
CREATE TRIGGER DEFAULT_TRIGGER17 BEFORE INSERT ON TBLTEACHER  REFERENCING NEW ROW AS NEW FOR EACH ROW IF NEW.AGE IS NULL THEN SET NEW.AGE= 0 ; END IF
CREATE TRIGGER GENERICINSERT_TBLTEACHER  AFTER INSERT ON TBLTEACHER   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLTEACHER  AFTER UPDATE ON TBLTEACHER   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLTEACHER  AFTER DELETE ON TBLTEACHER   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
CREATE TRIGGER GENERICINSERT_TBLUSER  AFTER INSERT ON TBLUSER   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerInsert" 
CREATE TRIGGER GENERICUPDATE_TBLUSER  AFTER UPDATE ON TBLUSER   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerUpdate" 
CREATE TRIGGER GENERICDELETE_TBLUSER  AFTER DELETE ON TBLUSER   FOR EACH ROW\u0009   CALL "net.ucanaccess.triggers.TriggerDelete" 
DISCONNECT
/*C3*/SET SCHEMA PUBLIC
DISCONNECT
/*C4*/SET SCHEMA PUBLIC
DISCONNECT
/*C5*/SET SCHEMA PUBLIC
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
DISCONNECT
/*C8*/SET SCHEMA PUBLIC
DISCONNECT
/*C9*/SET SCHEMA PUBLIC
DISCONNECT
/*C10*/SET SCHEMA PUBLIC
DISCONNECT
/*C11*/SET SCHEMA PUBLIC
DISCONNECT
